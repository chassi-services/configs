debug: false
server:
  # start services on random port by default
  port: 0
  # The stop processing uses a timeout which provides a grace period during which existing requests will be allowed to complete but no new requests will be permitted
  shutdown: graceful

# embedded database init, supports mysql too trough the 'mysql' spring profile
spring:
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    config:
      # Allow the microservices to override the remote properties with their own System properties or config file
      allow-override: true
      # Override configuration with any local property source
      override-none: true
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none

  boot:
    admin:
      client:
        url: http://localhost:9090
  zipkin:
    baseUrl: http://localhost:9411

eureka:
  client:
    enabled: true
    serviceUrl:
      defaultZone: http://localhost:9091/eureka
  instance:
    # enable to register multiple app instances with a random server port
    instance-id: ${spring.application.name}:${random.uuid}

# Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
# Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
spring.cloud.refresh.refreshable: false

# Logging
logging.level.org.springframework: INFO

# Metrics
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      # indica que health deve mostrar detalhes sempre
      show-details: always
  endpoints:
    web:
      exposure:
        # alem do health e do info, sempre vai export todos endpoints disponiveis
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
      wavefront:
        apiToken: "0f0d1f11-5b89-4513-b5bd-0a9e3189043d"

  security:
    enabled: false