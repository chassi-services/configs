server:
  port: 8080
  compression:
    enabled: true
    mime-types: application/json,text/css,application/javascript
    min-response-size: 2048


# Internationalization
spring.messages.basename: messages/messages

# The OAuth2 server definition that would be used to send the authorization requests to
authserver:
  hostname: auth-service
  port: 8081
  contextPath: auth

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: authentication
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**
#          filters:
#            - RewritePath=/api/auth/(?<segment>/?.*), $\{segment}
        - id: sales
          uri: lb://sales-service
          predicates:
            - Path=/**
#          filters:
#            - RewritePath=/(?<segment>/?.*), $\{segment}
#          filters:
#            - StripPrefix=1

  #        - id: monolito
  #          uri: http://localhost:8080
  #          predicates:
  #            - Path=/**

  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html
    client:
#      accessTokenUri: lb://auth-service/oauth/token
#      userAuthorizationUri: lb://auth-service/api/auth/authorize
      accessTokenUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/token
      userAuthorizationUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/authorize
      clientId: client
      clientSecret: secret
    # The userInfoUri is used to authenticate the user so that SSO token can be relayed forward. It needs to either be
    # a physical endpoint (defined using userInfoUri) OR can be bypassed if you use a JSON web token (JWT) that stores
    # information about grants and authentication in the token itself.
    # Note that the "/user" endpoint needs to provide the principle of the logged in user (/me endpoint)
    resource:
      userInfoUri: lb://auth-service/api/user/me
      preferTokenInfo: false

logging:
  level:
    org:
      springframework:
        security: DEBUG


---

spring:
  config:
    activate:
      on-profile: docker
  zipkin:
    baseUrl: http://tracing-server:9411
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
authserver:
  hostname: auth-service
